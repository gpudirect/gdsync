#!/bin/bash
#
# Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

declare -a ARCHS
PARAMS=""
KRN="none"
OUTPUT="dummy"
NARCHS=0
FATBIN=no

while (( "$#" )); do
  case "$1" in
    -a|--architecture)
      ARCHS[$NARCHS]="$2"
      let ++NARCHS
      echo "new ARCH=$2 NARCHS=$NARCHS"
      shift 2
      ;;
    -k|--kernel-name)
      KRN=$2
      echo "KRN=$KRN"
      shift 2
      ;;
    -o|--output)
      OUTPUT=$2
      echo "OUTPUT=$OUTPUT"
      shift 2
      ;;
    -n|--num-archs)
      NUM_ARCHS=$2
      echo "NUM_ARCHS=$NUM_ARCHS"
      shift 2
      ;;
    -f|--fatbin)
      FATBIN=yes
      echo "FATBIN=$FATBIN"
      shift 1
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"

echo "PARAMS:$@"
echo "ARCHS: ${ARCHS[*]}"

rm -f $OUTPUT

while (( $# )); do
    cat >>$OUTPUT <<EOF
#include "$1"
EOF
    shift 1
done

cat >>$OUTPUT <<EOF
#include "kernel_desc.hpp"

$INCLUDES
KERNEL_DESC_BEGIN(${KRN})
EOF

for arch in ${ARCHS[@]}; do
    cat >>$OUTPUT <<EOF
KERNEL_CUBIN(${KRN}, ${arch})
EOF
done

if [[ "$FATBIN" != "no" ]]; then
    cat >>$OUTPUT <<EOF
KERNEL_FATBIN(${KRN})
EOF
fi

cat >>$OUTPUT <<EOF
KERNEL_DESC_END(${KRN})
EOF
